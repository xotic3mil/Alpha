@using Data.Entities
@model IEnumerable<ProjectEntity>

@{
    ViewData["Title"] = "Join Projects";
}

<div class="pt-3">
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3">
        <h1 class="h2">Projects</h1>
    </div>

    <ul class="nav nav-tabs mb-4">
        <li class="nav-item">
            <a class="nav-link"
               asp-controller="Project" asp-action="Index">
                <i class="bi bi-grid me-1"></i> My Projects
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link active"
               asp-controller="UserProjects" asp-action="AvailableProjects">
                <i class="bi bi-search me-1"></i> Join Projects
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link"
               asp-controller="UserProjects" asp-action="MyRequests">
                <i class="bi bi-clipboard-check me-1"></i> My Requests
            </a>
        </li>
    </ul>

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            <ul>
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }

    <div class="row g-3">
        @if (Model != null && Model.Any())
        {
            foreach (var project in Model)
            {
                <div class="col-md-6 col-lg-4 col-xl-3">
                    <div class="card h-100 shadow-sm rounded-4">
                        <div class="card-body">
                            <div class="d-flex align-items-center mb-3">
                                <img src="@(string.IsNullOrEmpty(project.ImageUrl) ? "/images/project-template-1.svg" : project.ImageUrl)"
                                     class="rounded-3 me-3" alt="@project.Name"
                                     style="width: 56px; height: 56px; object-fit: cover;">
                                <div>
                                    <h5 class="card-title mb-1">@project.Name</h5>
                                    <div class="small text-muted">
                                        @project.Status?.StatusName
                                    </div>
                                </div>
                            </div>
                            <p class="card-text text-muted mb-3">@project.Description</p>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="badge bg-light text-dark">
                                    @{
                                        var daysLeft = Math.Ceiling((project.EndDate.ToDateTime(TimeOnly.MinValue) - DateTime.Now).TotalDays);
                                        @(daysLeft > 0 ? $"{daysLeft} days left" : "Overdue")
                                    }
                                </span>
                                <button type="button" class="btn btn-primary btn-sm rounded-pill"
                                        onclick="openRequestModal('@project.Id', '@project.Name')">
                                    Request to Join
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="text-center p-5 bg-light rounded-4">
                    <i class="bi bi-search" style="font-size: 2rem;"></i>
                    <h4 class="mt-3">No projects available</h4>
                    <p class="text-muted">
                        There are currently no projects available for you to join.<br>
                        Projects you're already a member of won't show here.
                    </p>
                </div>
            </div>
        }
    </div>
</div>

<!-- Request Join Modal -->
<div class="modal fade" id="requestJoinModal" tabindex="-1" aria-labelledby="requestJoinModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content rounded-4 border-0">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="requestJoinModalLabel">Request to Join Project</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @Html.AntiForgeryToken()
                <input type="hidden" id="requestProjectId" value="">
                <div class="mb-3">
                    <label for="requestMessage" class="form-label">Message (Optional)</label>
                    <textarea class="form-control formBorder" id="requestMessage" rows="3"
                              placeholder="Explain why you'd like to join this project..."></textarea>
                </div>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="submitJoinRequest()">Submit Request</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function openRequestModal(projectId, projectName) {
            $('#requestProjectId').val(projectId);
            $('.modal-title').text(`Request to Join: ${projectName}`);
            $('#requestMessage').val('');
            $('#requestJoinModal').modal('show');
        }

        function submitJoinRequest() {
            const projectId = $('#requestProjectId').val();
            const message = $('#requestMessage').val();

            $.ajax({
                url: '/UserProjects/RequestJoin',
                type: 'POST',
                data: {
                    projectId: projectId,
                    message: message,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').first().val()
                },
                success: function(response) {
                    $('#requestJoinModal').modal('hide');

                    if (response.success) {
                        if (typeof toastr !== 'undefined') {
                            toastr.success('Request sent successfully');
                        } else {
                            alert('Request sent successfully');
                        }
                        setTimeout(() => {
                            window.location.href = '/UserProjects/MyRequests';
                        }, 1000);
                    } else {
                        if (typeof toastr !== 'undefined') {
                            toastr.error(response.message || 'Failed to send request');
                        } else {
                            alert(response.message || 'Failed to send request');
                        }
                    }
                },
                error: function(error) {
                    $('#requestJoinModal').modal('hide');
                    console.error("Error sending request:", error);
                    if (typeof toastr !== 'undefined') {
                        toastr.error('Failed to send request');
                    } else {
                        alert('Failed to send request');
                    }
                }
            });
        }
    </script>
}