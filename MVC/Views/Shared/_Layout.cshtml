@using Data.Entities
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@inject SignInManager<UserEntity> SignInManager
@inject UserManager<UserEntity> UserManager

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]Alpha</title>
    <script type="importmap"></script>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/snackbar.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/project-card.css" />
    <link href="https://cdn.jsdelivr.net/npm/quill@2.0.3/dist/quill.snow.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" rel="stylesheet" />
    <link href="~/css/quill-custom.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" />

</head>
<body>

    <form id="__AjaxAntiForgeryForm" action="#" method="post" style="display: none;">
        @Html.AntiForgeryToken()
    </form>
    <div id="sidebar-overlay" class="position-fixed top-0 start-0 w-100 h-100 d-none" style="z-index: 1040;"></div>

    <div class="d-flex">
        <nav id="sidebarMenu" class="sidebar d-md-block border-end ">
            <div class="d-flex align-items-center justify-content-center py-3 mb-3 border-bottom">
                <h1 class="navbar-brand logo" style="font-size: 2rem;">
                    <img src="~/images/Logo.svg"
                    alt="logo"
                    height="30"
                    class="d-inline-block align-text-top" />
                    Alpha
                </h1>
            </div>
            <div class="py-2">
                <ul class="nav flex-column gap-2">
                    <li class="nav-item">
                        <a class="nav-link py-2 px-3 rounded-4 @(ViewContext.RouteData.Values["controller"]?.ToString() == "Home" ? "active" : "")" href="/home/index">
                            <i class="bi bi-star me-2"></i>
                            Dashboard
                        </a>
                    </li>
                   

                    <li class="nav-item">
                        <a class="nav-link py-2 px-3 rounded-4 d-flex align-items-center justify-content-between @(ViewContext.RouteData.Values["controller"]?.ToString() == "Project" ? "active" : "")"
                           href="/project/index"
                           data-bs-toggle="collapse"
                           data-bs-target="#projectSubmenu"
                           aria-expanded="@(ViewContext.RouteData.Values["controller"]?.ToString() == "Project" || ViewContext.RouteData.Values["controller"]?.ToString() == "AdminRequests" ? "true" : "false")">
                            <div>
                                <i class="bi bi-folder me-2"></i>
                                Projects
                            </div>
                            <i class="bi bi-chevron-down small"></i>
                        </a>
                        <div class="collapse @(ViewContext.RouteData.Values["controller"]?.ToString() == "Project" || ViewContext.RouteData.Values["controller"]?.ToString() == "AdminRequests" ? "show" : "")" id="projectSubmenu">
                            <ul class="nav flex-column ms-3 mt-2">
                                <li class="nav-item">
                                    <a class="nav-link py-2 px-3 rounded-3 @(ViewContext.RouteData.Values["controller"]?.ToString() == "Project" && ViewContext.RouteData.Values["action"]?.ToString() == "Index" ? "active" : "")" href="/project/index">
                                        <i class="bi bi-grid-1x2 me-2"></i> All Projects
                                    </a>
                                </li>

                                @await Component.InvokeAsync("AssignedProjects")
                                @await Component.InvokeAsync("RequestsNav")
                               

                                @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                                {
                                    <li class="nav-item">
                                        <a class="nav-link py-2 px-3 rounded-3 d-flex align-items-center justify-content-between @(ViewContext.RouteData.Values["controller"]?.ToString() == "AdminRequests" ? "active" : "")" href="/AdminRequests">
                                            <div>
                                                <i class="bi bi-envelope me-2" style="margin-top: 0,25rem;"></i>
                                                Manage Requests
                                            </div>
                                            <span id="pendingRequestsBadge" class="badge bg-danger" style="display: none;">0</span>
                                        </a>
                                    </li>
                                }
                            </ul>
                        </div>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link py-2 px-3 rounded-4 @(ViewContext.RouteData.Values["controller"]?.ToString() == "Member" ? "active" : "")" href="/member/index">
                            <i class="bi bi-person me-2"></i>
                            <span>Team Members</span>
                        </a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link py-2 px-3 rounded-4 @(ViewContext.RouteData.Values["controller"]?.ToString() == "Customer" ? "active" : "")" href="/Customer/index">
                            <i class="bi bi-people me-2"></i>
                            <span>Customers</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link py-2 px-3 rounded-4 @(ViewContext.RouteData.Values["controller"]?.ToString() == "Service" ? "active" : "")" href="/service/index">
                            <i class="bi bi-briefcase me-2"></i>
                            <span>Services</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link py-2 px-3 rounded-4 @(ViewContext.RouteData.Values["controller"]?.ToString() == "Status" ? "active" : "")" href="/status/index">
                            <i class="bi bi-bar-chart me-2"></i>
                            <span>Statuses</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link py-2 px-3 rounded-4 @(ViewContext.RouteData.Values["controller"]?.ToString() == "Role" ? "active" : "")" href="/role/index">
                            <i class="bi bi-shield-lock me-2"></i>
                            <span>Roles</span>
                        </a>
                    </li>
                </ul>
            </div>
        </nav>
        <div class="main-content flex-grow-1">
            <header class="navbar navbar-expand-md navbar-light sticky-top">
                <div class="container-fluid px-4 py-3">
                    <button class="navbar-toggler d-md-none"
                            type="button"
                            id="sidebarToggler">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="d-none d-md-flex flex-grow-1 me-3">
                        <div class="input-group search-wrapper">
                            <span class="input-group-text border-0 search" id="search-icon">
                                <svg xmlns="http://www.w3.org/2000/svg"
                                     width="16"
                                     height="16"
                                     fill="currentColor"
                                     class="bi bi-search text-muted"
                                     viewBox="0 0 16 16">
                                    <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z" />
                                </svg>
                            </span>
                            <input type="text" class="form-control formBorder border-0 ps-0 search" placeholder="Search anything..." aria-label="Search anything" aria-describedby="search-icon" />
                        </div>
                    </div>
                    <div class="d-flex align-items-center ms-auto gap-3">
                        <div class="dropdown">
                            <a href="#" class="notification-icon position-relative p-2 rounded-3 d-flex align-items-center"
                               id="notificationsDropdown"
                               data-bs-toggle="dropdown"
                               aria-expanded="false">
                                <span id="notificationBadge"
                                      class="notification-badge position-absolute badge rounded-pill bg-danger"
                                      style="display: none; font-size: 0.65rem; top: 6px; left: 6px; transform: translate(-50%, -50%);">
                                    0
                                </span>
                                <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" fill="currentColor" class="bi bi-bell" viewBox="0 0 16 16">
                                    <path d="M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2M8 1.918l-.797.161A4.002 4.002 0 0 0 4 6c0 .628-.134 2.197-.459 3.742-.16.767-.376 1.566-.663 2.258h10.244c-.287-.692-.502-1.49-.663-2.258C12.134 8.197 12 6.628 12 6a4.002 4.002 0 0 0-3.203-3.92L8 1.917zM14.22 12c.223.447.481.801.78 1H1c.299-.199.557-.553.78-1C2.68 10.2 3 6.88 3 6c0-2.42 1.72-4.44 4.005-4.901a1 1 0 1 1 1.99 0A5.002 5.002 0 0 1 13 6c0 .88.32 4.2 1.22 6" />
                                </svg>
                            </a>
                            <div class="dropdown-menu dropdown-menu-end shadow notification-dropdown p-0"
                                 aria-labelledby="notificationsDropdown"
                                 style="width: 350px; max-height: 480px; overflow-y: auto;">
                                <div class="notification-header p-3 border-bottom">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <h6 class="mb-0">Notifications</h6>
                                        <button onclick="markAllAsRead()" class="btn btn-sm btn-link text-decoration-none p-0 small">Mark all as read</button>
                                    </div>
                                </div>

                                <div id="notificationsContainer" class="notification-body">
                                    <div class="text-center py-4">
                                        <div class="spinner-border spinner-border-sm text-primary" role="status">
                                            <span class="visually-hidden">Loading...</span>
                                        </div>
                                        <p class="mt-2 small text-muted">Loading notifications...</p>
                                    </div>
                                </div>

                                <div class="notification-footer border-top p-2">
                                    <a href="/Notification/All" class="btn btn-link btn-sm w-100 text-decoration-none">View all notifications</a>
                                </div>
                            </div>
                        </div>
                        <div class="dropdown">
                            @inject UserManager<UserEntity> UserManager
                            @{
                                var user = await UserManager.GetUserAsync(User);
                                var userId = user?.Id.ToString();
                                var isAdmin = User.IsInRole("Admin") ? "true" : "false";
                                var isProjectManager = User.IsInRole("ProjectManager") ? "true" : "false";
                                var avatarUrl = user?.AvatarUrl ?? "/images/default-avatar.png";
                            }
                            <input type="hidden" id="currentUserId" value="@userId" />
                            <input type="hidden" id="isAdmin" value="@isAdmin" />
                            <input type="hidden" id="isProjectManager" value="@isProjectManager" />
                            <a href="#" class="nav-link dropdown-toggle d-flex align-items-center" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <img src="@avatarUrl" alt="User Avatar" class="rounded-circle" style="width: 32px; height: 32px; object-fit: cover;" />
                                <span class="ms-2">@User.Identity?.Name</span>
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end shadow-sm"
                                aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="/Profile">Profile Settings</a></li>
                                <li><hr class="dropdown-divider" /></li>
                                <li>
                                    <a class="dropdown-item" href="/auth/admin">Admin Login</a>
                                </li>
                                @if (SignInManager.IsSignedIn(User))
                                {
                                    <li>
                                        <form asp-action="Logout" asp-controller="Auth" method="post">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="dropdown-item border-0" style="color: var(--text-color);">Sign Out</button>
                                        </form>
                                    </li>
                                }
                                else
                                {
                                    <li><a class="dropdown-item" href="/auth/login">Sign In</a></li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </header>

            @await Html.PartialAsync("_CookieConsentPartial")
            <div class="container-fluid px-4 mt-5 mb-3">
                <main role="main" class="pb-3 page-transition">
                    @RenderBody()
                </main>
            </div>
        </div>
    </div>

    @await Html.PartialAsync("~/Views/Project/_ProjectDetailsPartial.cshtml", new ProjectViewModel())

 
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/dist/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/js/shared/form-validation.js" asp-append-version="true"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/quill@2.0.3/dist/quill.min.js"></script>
    <script src="~/js/shared/quill-editor.js" asp-append-version="true"></script>
    <script src="~/js/shared/snackbar.js" asp-append-version="true"></script>
    <script src="~/js/shared/initializeNotificationConnection.js" asp-append-version="true"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/project/project-management.js" asp-append-version="true"></script>
    <script src="~/js/tasks/task-management.js" asp-append-version="true"></script>
    <script src="~/js/timeentries/time-entry-management.js" asp-append-version="true"></script>
    <script src="~/js/darkmode-toggle.js" asp-append-version="true"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const sidebarToggler = document.getElementById('sidebarToggler');
            const sidebar = document.getElementById('sidebarMenu');
            const overlay = document.getElementById('sidebar-overlay');

            if (sidebarToggler && sidebar && overlay) {
                sidebarToggler.addEventListener('click', function() {
                    sidebar.classList.toggle('show');
                    overlay.classList.toggle('d-none');
                    document.body.classList.toggle('sidebar-open');
                });

                overlay.addEventListener('click', function() {
                    sidebar.classList.remove('show');
                    overlay.classList.add('d-none');

                    document.body.classList.remove('sidebar-open');
                });
            }

            $('#notificationsDropdown').on('click', function() {
                loadNotifications();
            });
        });

        function loadNotificationCount() {
            $.ajax({
                url: '/Notification/GetUnreadCount',
                type: 'GET',
                success: function(response) {
                    if (response.success && response.count > 0) {
                        $('#notificationBadge').text(response.count).show();
                    } else {
                        $('#notificationBadge').hide();
                    }
                },
                error: function(error) {
                    console.error('Error loading notification count:', error);
                }
            });
        }

                function loadNotifications() {
            $.ajax({
                url: '/Notification/GetUnreadNotifications',
                type: 'GET',
                success: function(response) {

                    if (!response.success) {
                        $('#notificationsContainer').html('<div class="empty-state p-4 text-center"><p class="text-muted">Failed to load notifications</p></div>');
                        return;
                    }

                    if (!response.notifications || response.notifications.length === 0) {
                        $('#notificationsContainer').html(`
                            <div class="empty-state p-4 text-center">
                                <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-bell-slash text-muted mb-3" viewBox="0 0 16 16">
                                    <path d="M5.164 14H15c-.299-.199-.557-.553-.78-1-.9-1.8-1.22-5.12-1.22-6 0-.264-.02-.523-.06-.776l-.938.938c.02-.12.04-.242.06-.364.12-1.19.42-2.35 1.23-3.08.5-.48 1.25-.8 2.25-.94l-1.497 1.497.23.232c-.36.932-.598 2.04-.82 3.085C14.04 8.312 14 10.475 14 12c0 .21.15.469.55.689l-9.386-9.386zM8.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0"/><path d="M5.72 1.243a.5.5 0 0 0-.44.9l10.5 10.5a.5.5 0 0 0 .8-.41l-1.13-1.11.637-.622.104-.104c.188-.187.35-.39.51-.631.096-.14.182-.293.261-.454A5.6 5.6 0 0 0 16 6.6c0-.71-.149-1.33-.29-1.86a9 9 0 0 0-.4-1.17c-.058-.133-.175-.387-.225-.48A.6.6 0 0 0 14.033 3H2c-.3 0-.5.024-.65.07L1.236 2.956a.5.5 0 0 0-.85.53L5.72 1.243zM4.375 3H14a.6.6 0 0 1 .6.6 6 6 0 0 1-.327 1.607 3.7 3.7 0 0 1-.178.39c-.208.404-.52.805-.91 1.123l-.098.097-.081.08-.579.571-7.625-7.625c.036-.006.082-.007.117-.007z"/>
                                </svg>
                                <p class="text-muted">No new notifications</p>
                            </div>
                        `);
                        return;
                    }

                    var html = '';
                    response.notifications.forEach(function(notification) {
                        var date = new Date(notification.createdAt);
                        var formattedDate = formatNotificationTime(date);

                        var iconClass = getNotificationIcon(notification.type);

                        var actionButton = '';
                     if (notification.type === 'ProjectJoinRequest' && notification.relatedEntityId) {
                         actionButton = `
                         <a href="/AdminRequests?requestId=${notification.relatedEntityId}"
                            class="btn btn-sm btn-primary rounded-3 px-3 mt-2">
                             Review Request
                         </a>
                        `;
                    }

                        html += `
                        <div class="notification-item p-3 border-bottom position-relative ${notification.isRead ? 'read' : 'unread'}"
                             data-notification-id="${notification.id}">
                            <div class="d-flex">
                                <div class="notification-icon me-3">
                                    <div class="icon-circle ${getNotificationColorClass(notification.type)}">
                                        <i class="bi ${iconClass}"></i>
                                    </div>
                                </div>
                                <div class="notification-content flex-grow-1">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <h6 class="mb-1 fw-medium">${notification.title}</h6>
                                        <small class="text-muted ms-2">${formattedDate}</small>
                                    </div>
                                    <p class="text-muted small mb-2">${notification.message}</p>
                                    <div class="d-flex justify-content-between align-items-center">
                                        ${actionButton}
                                        <button class="btn btn-sm btn-link p-0 text-muted small" onclick="markAsRead('${notification.id}')">
                                            <i class="bi bi-check-circle me-1"></i>Mark as read
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>`;
                    });

                    $('#notificationsContainer').html(html);
                },
                error: function(error) {
                    console.error('Error loading notifications:', error);
                    $('#notificationsContainer').html('<div class="p-4 text-center"><p class="text-danger">Error loading notifications</p></div>');
                }
            });
        }

                function getNotificationIcon(type) {
            switch(type) {
                case 'ProjectJoinRequest': return 'bi-person-plus';
                case 'Comment': return 'bi-chat-left-text';
                case 'ProjectUpdate': return 'bi-briefcase';
                case 'SystemAlert': return 'bi-exclamation-triangle';
                default: return 'bi-bell';
            }
        }

                function getNotificationColorClass(type) {
            switch(type) {
                case 'ProjectJoinRequest': return 'bg-primary-subtle text-primary';
                case 'Comment': return 'bg-info-subtle text-info';
                case 'ProjectUpdate': return 'bg-success-subtle text-success';
                case 'SystemAlert': return 'bg-warning-subtle text-warning';
                default: return 'bg-secondary-subtle text-secondary';
            }
        }

                function formatNotificationTime(date) {
            const now = new Date();
            const diff = Math.floor((now - date) / 1000);

            if (diff < 60) return 'Just now';
            if (diff < 3600) return Math.floor(diff / 60) + ' min ago';
            if (diff < 86400) return Math.floor(diff / 3600) + ' hours ago';
            if (diff < 604800) return Math.floor(diff / 86400) + ' days ago';

            return date.toLocaleDateString();
        }

                function markAllAsRead() {
            $.ajax({
                url: '/Notification/MarkAllAsRead',
                type: 'POST',
                data: {
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').first().val()
                },
                success: function(response) {
                    if (response.success) {
                        $('#notificationBadge').hide();
                        loadNotifications(); 
                    }
                },
                error: function(error) {
                    console.error('Error marking all notifications as read:', error);
                }
            });
        }

                function markAsRead(notificationId) {
            $.ajax({
                url: '/Notification/MarkAsRead',
                type: 'POST',
                data: {
                    id: notificationId,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').first().val()
                },
                success: function(response) {
                    if (response.success) {
                        $(`.notification-item[data-notification-id="${notificationId}"]`).removeClass('unread').addClass('read');

                        loadNotificationCount();
                    } else {
                        console.error('Error marking notification as read:', response.message);
                    }
                },
                error: function(error) {
                    console.error('Error marking notification as read:', error);
                }
            });
        }


    </script>

    @await RenderSectionAsync("Scripts", required: false)
    <input type="hidden" id="currentUserId" value="@userId" />
    <input type="hidden" id="isAdmin" value="@isAdmin" />
    <input type="hidden" id="isProjectManager" value="@isProjectManager" />
</body>
</html>

