@using Domain.Models
@model ProjectViewModel


@{
    ViewData["Title"] = "Project Page";
}
<div class="pt-3">
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3">
        <h1 class="h2">Projects</h1>
        <div class="btn-toolbar">
            <button href="#"
                    data-bs-toggle="modal"
                    data-bs-target="#addProjectModal"
                    type="button"
                    class="btn btnAdd me-2">
                + Project
            </button>
        </div>
    </div>
    <div class="navigation-container mb-4">
        <ul class="nav nav-tabs mb-0">
            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["action"].ToString() == "Index" ? "active" : "")"
                   asp-controller="Project" asp-action="Index">
                    <i class="bi bi-grid me-1"></i> My Projects
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["action"].ToString() == "AvailableProjects" ? "active" : "")"
                   asp-controller="UserProjects" asp-action="AvailableProjects">
                    <i class="bi bi-search me-1"></i> Join Projects
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["action"].ToString() == "MyRequests" ? "active" : "")"
                   asp-controller="UserProjects" asp-action="MyRequests">
                    <i class="bi bi-clipboard-check me-1"></i> My Requests
                    @{
                        var pendingCount = TempData["PendingRequestCount"] as int?;
                        if (pendingCount > 0)
                        {
                            <span class="badge bg-danger rounded-pill ms-1">@pendingCount</span>
                        }
                    }
                </a>
            </li>
        </ul>

        @if (ViewContext.RouteData.Values["action"].ToString() == "Index" &&
        ViewContext.RouteData.Values["controller"].ToString() == "Project")
        {
            <div class="sub-navigation border-start border-end border-bottom rounded-bottom pt-2 px-3 pb-2 bg-light">
                <div class="d-flex flex-wrap">
                    <span class="me-3 text-muted small pt-1">Filter by status:</span>
                    <div class="nav nav-pills nav-pills-sm">
                        <a class="nav-link btn-sm @(ViewBag.StatusFilter == null || ViewBag.StatusFilter == "All" ? "active" : "")"
                           asp-controller="Project" asp-action="Index">
                            All (@(ViewBag.TotalCount ?? 0))
                        </a>
                        @if (ViewBag.StatusCounts != null)
                        {
                            @foreach (var statusGroup in ViewBag.StatusCounts)
                            {
                                <a class="nav-link btn-sm @(ViewBag.StatusFilter == statusGroup.Key ? "active" : "")"
                                   asp-controller="Project" asp-action="Index" asp-route-statusFilter="@statusGroup.Key">
                                    @statusGroup.Key (@statusGroup.Value)
                                </a>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="row g-3">
            @if (ViewBag.SuccessMessage != null)
            {
                <div class="alert alert-success">
                    @ViewBag.SuccessMessage
                </div>
            }

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger">
                    <ul>
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    </ul>
                </div>
            }
             @foreach (var project in Model.Projects)
            {
                @await Html.PartialAsync("_ProjectCardPartial", project)
            } 
    </div>
</div>

    @await Html.PartialAsync("_CreateProjectPartial", Model)
    @await Html.PartialAsync("_EditProjectPartial", Model)
    @await Html.PartialAsync("_ProjectDetailsPartial", Model)


@section Scripts {
    <script src="~/js/shared/date-formatters.js" asp-append-version="true"></script>

    <script src="~/js/project/project-details.js" asp-append-version="true"></script>
    <script src="~/js/project/project-management.js" asp-append-version="true"></script>

    <script src="~/js/tasks/task-details.js" asp-append-version="true"></script>
    <script src="~/js/tasks/task-management.js" asp-append-version="true"></script>


    <script src="~/js/timeentries/time-entry-management.js" asp-append-version="true"></script>
    <script src="~/js/timeentries/time-entry-reports.js" asp-append-version="true"></script>

    <script>
        $(document).ready(function() {
            console.log("Project index page loaded");

            if ($('#projectDetailId').length === 0) {
                $('body').append('<input type="hidden" id="projectDetailId" value="" />');
            }

            if ($('#projectDetailDeleteId').length === 0) {
                $('body').append('<input type="hidden" id="projectDetailDeleteId" value="" />');
            }
        });
    </script>
}